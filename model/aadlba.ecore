<?xml version="1.0" encoding="UTF-8"?>
<!--
AADL-BA-FrontEnd
 
Copyright Â© 2011 TELECOM ParisTech and CNRS
 
TELECOM ParisTech/LTCI

Authors: see AUTHORS
 
This program is free software: you can redistribute it and/or modify 
it under the terms of the Eclipse Public License as published by Eclipse,
either version 1.0 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
Eclipse Public License for more details.
You should have received a copy of the Eclipse Public License
along with this program.  If not, see 
http://www.eclipse.org/org/documents/epl-v10.php
-->
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="aadlba"
    nsURI="https://eve.enst.fr/svn/aadl-eclipse-dev/aadlba/trunk/fr.tpt.aadl.annex.behavior/aadlba"
    nsPrefix="aadlba">
  <eClassifiers xsi:type="ecore:EClass" name="AssignmentAction" eSuperTypes="#//BasicAction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetOwned" lowerBound="1"
        eType="#//Target" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valueExpressionOwned" eType="#//ValueExpression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="any" eType="#//Boolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BasicAction" abstract="true" interface="true"
      eSuperTypes="#//BehaviorAction"/>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorAction" abstract="true" interface="true"
      eSuperTypes="#//BehaviorActions"/>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorActionBlock" eSuperTypes="#//BehaviorElement #//BehaviorAction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorActionsOwned" lowerBound="1"
        eType="#//BehaviorActions" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorTimeOwned" eType="#//BehaviorTime"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorActionCollection" abstract="true"
      interface="true" eSuperTypes="#//BehaviorActions">
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorActions" lowerBound="1"
        upperBound="-1" eType="#//BehaviorAction" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorActions" abstract="true" interface="true"
      eSuperTypes="#//BehaviorElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorActionSequence" eSuperTypes="#//BehaviorActionCollection"/>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorActionSet" eSuperTypes="#//BehaviorActionCollection"/>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorAnnex" eSuperTypes="../../edu.cmu.sei.aadl.aadl2/model/aadl2.ecore#//AnnexSubclause #//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorVariables" upperBound="-1"
        eType="#//BehaviorVariable" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorStates" upperBound="-1"
        eType="#//BehaviorState" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorTransitions" upperBound="-1"
        eType="#//BehaviorTransition" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorCondition" abstract="true" interface="true"
      eSuperTypes="#//BehaviorElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorElement" abstract="true" eSuperTypes="../../edu.cmu.sei.aadl.aadl2/model/aadl2.ecore#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An element is a constituent of a model.&#xD;&#xA;An element is a constituent of a model. As such, it has the capability of owning other elements."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="baRef" unique="false" eType="#//BehaviorElement"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aadlRef" unique="false"
        eType="ecore:EClass ../../edu.cmu.sei.aadl.aadl2/model/aadl2.ecore#//Element"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="BehaviorFeatureType">
    <eLiterals name="NONE" literal="unknown behavior annex feature"/>
    <eLiterals name="BEHAVIOR_VARIABLE" value="1" literal="behavior variable"/>
    <eLiterals name="UNIQUE_COMPONENT_CLASSIFIER_REFERENCE" value="2" literal="iterative variable"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorNamedElement" abstract="true"
      eSuperTypes="#//BehaviorElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A named element is an element in a model that may have a name."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false" lowerBound="1"
        eType="#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of the NamedElement."/>
      </eAnnotations>
      <eAnnotations source="http://www.topcased.org/documentation">
        <details key="documentation" value="The name of the NamedElement."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" ordered="false"
        lowerBound="1" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="namespaceSeparator" eType="#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="namespace" eType="#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorState" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="identifiers" lowerBound="1"
        upperBound="-1" eType="#//Identifier" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="initial" lowerBound="1"
        eType="#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="complete" lowerBound="1"
        eType="#//Boolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="final" lowerBound="1" eType="#//Boolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorTime" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="integerValueOwned" lowerBound="1"
        eType="#//IntegerValue" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="unitIdentifier" lowerBound="1"
        eType="#//Identifier" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorTransition" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="transitionIdentifier" eType="#//Identifier"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceStateIdentifiers"
        lowerBound="1" upperBound="-1" eType="#//Identifier" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorConditionOwned"
        lowerBound="1" eType="#//BehaviorCondition" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="destinationStateIdentifier"
        lowerBound="1" eType="#//Identifier" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorActionBlockOwned"
        eType="#//BehaviorActionBlock" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorTransitionPriority"
        eType="#//Numeral"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorVariable" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="LocalVariableDeclarators"
        lowerBound="1" upperBound="-1" eType="#//Declarator" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="DataUniqueComponentClassifierReference"
        lowerBound="1" eType="#//UniqueComponentClassifierReference" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="BinaryAddingOperator">
    <eLiterals name="None" literal="None"/>
    <eLiterals name="Plus" value="1" literal="+"/>
    <eLiterals name="Minus" value="2" literal="-"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="BinaryNumericOperator">
    <eLiterals name="None"/>
    <eLiterals name="MultiplyMultiply" value="1" literal="**"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="boolean">
    <eAnnotations source="http://www.topcased.org/documentation">
      <details key="documentation" value="A Boolean type is used for logical expression, consisting of the predefined values true and false."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorBooleanLiteral" eSuperTypes="#//Literal ../../edu.cmu.sei.aadl.aadl2/model/aadl2.ecore#//BooleanLiteral"/>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorStringLiteral" eSuperTypes="#//Literal ../../edu.cmu.sei.aadl.aadl2/model/aadl2.ecore#//StringLiteral"/>
  <eClassifiers xsi:type="ecore:EClass" name="CommunicationAction" abstract="true"
      interface="true" eSuperTypes="#//BasicAction"/>
  <eClassifiers xsi:type="ecore:EClass" name="CompletionRelativeTimeoutConditionAndCatch"
      eSuperTypes="#//DispatchTriggerCondition #//BehaviorTime"/>
  <eClassifiers xsi:type="ecore:EClass" name="CondStatement" abstract="true" interface="true"
      eSuperTypes="#//BehaviorAction"/>
  <eClassifiers xsi:type="ecore:EClass" name="DataComponentReference" eSuperTypes="#//ElementValues #//Target #//ValueVariable">
    <eStructuralFeatures xsi:type="ecore:EReference" name="names" lowerBound="1" upperBound="-1"
        eType="#//Name" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="DataRepresentation">
    <eLiterals name="Unknown" literal="unknown"/>
    <eLiterals name="Integer" value="1" literal="universal integer"/>
    <eLiterals name="Float" value="2" literal="universal real"/>
    <eLiterals name="Character" value="3" literal="standard character"/>
    <eLiterals name="Boolean" value="4" literal="standard boolean"/>
    <eLiterals name="String" value="5" literal="standard string"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Declarator" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="identifierOwned" lowerBound="1"
        eType="#//Identifier" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="arraySizes" upperBound="-1"
        eType="#//IntegerValueConstant" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DispatchCondition" eSuperTypes="#//BehaviorCondition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="dispatchTriggerConditionOwned"
        eType="#//DispatchTriggerCondition" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="frozenPorts" upperBound="-1"
        eType="#//Identifier" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DispatchConjunction" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="dispatchTriggers" lowerBound="1"
        upperBound="-1" eType="#//Identifier" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DispatchTriggerCondition" abstract="true"
      interface="true" eSuperTypes="#//BehaviorElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="DispatchTriggerConditionStop" eSuperTypes="#//DispatchTriggerCondition"/>
  <eClassifiers xsi:type="ecore:EClass" name="DispatchTriggerLogicalExpression" eSuperTypes="#//DispatchTriggerCondition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="dispatchConjunctions" lowerBound="1"
        upperBound="-1" eType="#//DispatchConjunction" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ElementValues" abstract="true" interface="true"
      eSuperTypes="#//BehaviorElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="ExecuteCondition" abstract="true" interface="true"
      eSuperTypes="#//BehaviorCondition"/>
  <eClassifiers xsi:type="ecore:EClass" name="Factor" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="valueOwned" eType="#//Value"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valueSdOwned" eType="#//Value"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="binaryNumericOperatorOwned"
        eType="#//BinaryNumericOperator" unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="unaryNumericOperatorOwned"
        eType="#//UnaryNumericOperator" unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="unaryBooleanOperatorOwned"
        eType="#//UnaryBooleanOperator" unsettable="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="FeatureType">
    <eLiterals name="NONE" literal="unknown aadl classifier"/>
    <eLiterals name="IN_DATA_PORT" value="1" literal="in data port"/>
    <eLiterals name="OUT_DATA_PORT" value="2" literal="out data port"/>
    <eLiterals name="IN_OUT_DATA_PORT" value="3" literal="inout data port"/>
    <eLiterals name="IN_EVENT_PORT" value="4" literal="in event port"/>
    <eLiterals name="OUT_EVENT_PORT" value="5" literal="out event port"/>
    <eLiterals name="IN_OUT_EVENT_PORT" value="6" literal="inout event port"/>
    <eLiterals name="IN_EVENT_DATA_PORT" value="7" literal="in event data port"/>
    <eLiterals name="OUT_EVENT_DATA_PORT" value="8" literal="out event data port"/>
    <eLiterals name="IN_OUT_EVENT_DATA_PORT" value="9" literal="inout event data port"/>
    <eLiterals name="PROVIDES_SUBPROGRAM_ACCESS" value="10" literal="provides subprogram access"/>
    <eLiterals name="REQUIRES_SUBPROGRAM_ACCESS" value="11" literal="requires subprogram access"/>
    <eLiterals name="PROVIDES_SUBPROGRAM_GROUP_ACCESS" value="12" literal="provides subprogram group access"/>
    <eLiterals name="REQUIRES_SUBPROGRAM_GROUP_ACCESS" value="13" literal="requires subprogram group access"/>
    <eLiterals name="SUBPROGRAM_SUBCOMPONENT" value="14" literal="subprogram subcomponent"/>
    <eLiterals name="SUBPROGRAM_CLASSIFIER" value="15" literal="subprogram classifier"/>
    <eLiterals name="SUBPROGRAM_PROTOTYPE" value="16" literal="subprogram prototype"/>
    <eLiterals name="COMPONENT_PROTOTYPE" value="17" literal="component prototype"/>
    <eLiterals name="COMPONENT_PROTOTYPE_BINDING" value="18" literal="component prototype binding"/>
    <eLiterals name="FEATURE_PROTOTYPE" value="19" literal="feature prototype"/>
    <eLiterals name="FEATURE_PROTOTYPE_BINDING" value="20" literal="feature prototype binding"/>
    <eLiterals name="FEATURE_GROUP_PROTOTYPE" value="21" literal="feature group prototytpe"/>
    <eLiterals name="FEATURE_GROUP_PROTOTYPE_BINDING" value="22" literal="feature group prototype binding"/>
    <eLiterals name="PROVIDES_DATA_ACCESS" value="23" literal="provides data access"/>
    <eLiterals name="REQUIRES_DATA_ACCESS" value="24" literal="requires data access"/>
    <eLiterals name="DATA_SUBCOMPONENT" value="25" literal="data subcomponent"/>
    <eLiterals name="DATA_CLASSIFIER" value="26" literal="data classifier"/>
    <eLiterals name="IN_PARAMETER" value="27" literal="in parameter"/>
    <eLiterals name="OUT_PARAMETER" value="28" literal="out parameter"/>
    <eLiterals name="IN_OUT_PARAMETER" value="29" literal="in out parameter"/>
    <eLiterals name="PROPERTY_CONSTANT" value="30" literal="property constant"/>
    <eLiterals name="PROPERTY_VALUE" value="31" literal="property value"/>
    <eLiterals name="PROVIDES_BUS_ACCESS" value="32" literal="provides bus access"/>
    <eLiterals name="REQUIRES_BUS_ACCESS" value="33" literal="requires bus access"/>
    <eLiterals name="FEATURE_GROUP" value="34" literal="feature group"/>
    <eLiterals name="ABSTRACT_FEATURE" value="35" literal="abstract feature"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ForOrForAllStatement" eSuperTypes="#//LoopStatement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="elementIdentifier" lowerBound="1"
        eType="#//Identifier" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dataUniqueComponentClassifierReference"
        lowerBound="1" eType="#//UniqueComponentClassifierReference" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elementValuesOwned" lowerBound="1"
        eType="#//ElementValues" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="forAll" eType="#//Boolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Identifier" eSuperTypes="#//BehaviorElement #//DispatchTriggerCondition">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IfStatement" eSuperTypes="#//CondStatement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="hasElse" eType="#//Boolean"
        defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="logicalValueExpressions"
        lowerBound="1" upperBound="-1" eType="#//ValueExpression" unsettable="true"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorActionsOwned" lowerBound="1"
        upperBound="-1" eType="#//BehaviorActions" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="int">
    <eAnnotations source="http://www.topcased.org/documentation">
      <details key="documentation" value="An integer is a primitive type representing integer values."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorIntegerLiteral" eSuperTypes="#//NumericLiteral ../../edu.cmu.sei.aadl.aadl2/model/aadl2.ecore#//IntegerLiteral"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerRange" eSuperTypes="#//ElementValues">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lowerIntegerValue" lowerBound="1"
        eType="#//IntegerValue" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="upperIntegerValue" lowerBound="1"
        eType="#//IntegerValue" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerValue" abstract="true" interface="true"
      eSuperTypes="#//BehaviorElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerValueConstant" abstract="true"
      interface="true" eSuperTypes="#//IntegerValue"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerValueVariable" abstract="true"
      interface="true" eSuperTypes="#//IntegerValue"/>
  <eClassifiers xsi:type="ecore:EClass" name="Literal" abstract="true" interface="true"
      eSuperTypes="#//ValueConstant"/>
  <eClassifiers xsi:type="ecore:EClass" name="LockAction" eSuperTypes="#//SharedDataAction">
    <eAnnotations source="Documentation">
      <details key="documentation" value="A null data name means that all shared data are locked while in the critical section"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="LogicalOperator">
    <eLiterals name="None"/>
    <eLiterals name="And" value="1" literal="and"/>
    <eLiterals name="Or" value="2" literal="or"/>
    <eLiterals name="Xor" value="3" literal="xor"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LoopStatement" abstract="true" eSuperTypes="#//CondStatement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="behaviorActionsOwned" lowerBound="1"
        eType="#//BehaviorActions" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="MultiplyingOperator">
    <eLiterals name="None"/>
    <eLiterals name="Multiply" value="1" literal="*"/>
    <eLiterals name="Divide" value="2" literal="/"/>
    <eLiterals name="Mod" value="3" literal="mod"/>
    <eLiterals name="Rem" value="4" literal="rem"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Name" eSuperTypes="#//ElementValues #//Target #//ValueVariable">
    <eStructuralFeatures xsi:type="ecore:EReference" name="identifierOwned" lowerBound="1"
        eType="#//Identifier" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="arrayIndexes" upperBound="-1"
        eType="#//IntegerValueVariable" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Numeral" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#//Integer"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NumericLiteral" abstract="true" interface="true"
      eSuperTypes="#//Literal ../../edu.cmu.sei.aadl.aadl2/model/aadl2.ecore#//NumberValue"/>
  <eClassifiers xsi:type="ecore:EClass" name="Otherwise" eSuperTypes="#//ExecuteCondition"/>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterLabel" abstract="true" interface="true"
      eSuperTypes="#//BehaviorElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="PortCountValue" eSuperTypes="#//ValueVariable #//Name"/>
  <eClassifiers xsi:type="ecore:EClass" name="PortDequeueAction" eSuperTypes="#//CommunicationAction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="portName" lowerBound="1"
        eType="#//Name" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetOwned" eType="#//Target"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PortDequeueValue" eSuperTypes="#//ValueVariable #//Name"/>
  <eClassifiers xsi:type="ecore:EClass" name="PortFreezeAction" eSuperTypes="#//CommunicationAction #//Name"/>
  <eClassifiers xsi:type="ecore:EClass" name="PortFreshValue" eSuperTypes="#//ValueVariable #//Name"/>
  <eClassifiers xsi:type="ecore:EClass" name="PortSendAction" eSuperTypes="#//CommunicationAction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="portName" lowerBound="1"
        eType="#//Name" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valueExpressionOwned" eType="#//ValueExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorPropertyConstant" eSuperTypes="#//BehaviorNamedElement #//ValueConstant"/>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorPropertyValue" eSuperTypes="#//BehaviorNamedElement #//ValueConstant"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Real" instanceClassName="double">
    <eAnnotations source="http://www.topcased.org/documentation">
      <details key="documentation" value="A real is a primitive type representing real numeric values."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BehaviorRealLiteral" eSuperTypes="#//NumericLiteral ../../edu.cmu.sei.aadl.aadl2/model/aadl2.ecore#//RealLiteral"/>
  <eClassifiers xsi:type="ecore:EClass" name="Relation" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="simpleExpressionOwned"
        lowerBound="1" eType="#//SimpleExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="simpleExpressionSdOwned"
        eType="#//SimpleExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="relationalOperatorOwned"
        eType="#//RelationalOperator" unsettable="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="RelationalOperator">
    <eLiterals name="None"/>
    <eLiterals name="Equal" value="1" literal="="/>
    <eLiterals name="NotEqual" value="2" literal="!="/>
    <eLiterals name="LessThan" value="3" literal="&lt;"/>
    <eLiterals name="LessOrEqualThan" value="4" literal="&lt;="/>
    <eLiterals name="GreaterThan" value="5" literal=">"/>
    <eLiterals name="GreaterOrEqualThan" value="6" literal=">="/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SharedDataAction" abstract="true" eSuperTypes="#//CommunicationAction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="dataAccessName" eType="#//Name"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SimpleExpression" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="unaryAddingOperatorOwned"
        eType="#//UnaryAddingOperator" unsettable="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="terms" lowerBound="1" upperBound="-1"
        eType="#//Term" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="binaryAddingOperators"
        unique="false" upperBound="-1" eType="#//BinaryAddingOperator" unsettable="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
    <eAnnotations source="http://www.topcased.org/documentation">
      <details key="documentation" value="A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SubprogramCallAction" eSuperTypes="#//CommunicationAction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="subprogramNames" upperBound="2"
        eType="#//Name" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subprogramReference" eType="#//UniqueComponentClassifierReference"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameterLabels" upperBound="-1"
        eType="#//ParameterLabel" unsettable="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Target" eSuperTypes="#//ParameterLabel #//BehaviorElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="Term" eSuperTypes="#//BehaviorElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="factors" lowerBound="1"
        upperBound="-1" eType="#//Factor" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="multiplyingOperators" unique="false"
        upperBound="-1" eType="#//MultiplyingOperator" unsettable="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TimedAction" eSuperTypes="#//BasicAction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lowerBehaviorTime" lowerBound="1"
        eType="#//BehaviorTime" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="upperBehaviorTime" eType="#//BehaviorTime"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TimeoutCatch" eSuperTypes="#//ExecuteCondition #//DispatchTriggerCondition"/>
  <eClassifiers xsi:type="ecore:EEnum" name="UnaryAddingOperator">
    <eLiterals name="None"/>
    <eLiterals name="Plus" value="1" literal="+"/>
    <eLiterals name="Minus" value="2" literal="-"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="UnaryBooleanOperator">
    <eLiterals name="None"/>
    <eLiterals name="Not" value="1" literal="not"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="UnaryNumericOperator">
    <eLiterals name="None"/>
    <eLiterals name="Abs" value="1" literal="abs"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UniqueComponentClassifierReference"
      eSuperTypes="#//BehaviorNamedElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="UnlockAction" eSuperTypes="#//SharedDataAction">
    <eAnnotations source="documentation">
      <details key="documentation" value="A null data name means that all shared data are unlocked at the end of the critical section"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Value" abstract="true" interface="true"
      eSuperTypes="#//BehaviorElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="ValueConstant" abstract="true" interface="true"
      eSuperTypes="#//Value #//IntegerValueConstant"/>
  <eClassifiers xsi:type="ecore:EClass" name="ValueExpression" eSuperTypes="#//Value #//ParameterLabel #//ExecuteCondition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="relations" lowerBound="1"
        upperBound="-1" eType="#//Relation" unsettable="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="logicalOperators" unique="false"
        upperBound="-1" eType="#//LogicalOperator" unsettable="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueVariable" abstract="true" interface="true"
      eSuperTypes="#//Value #//IntegerValueVariable"/>
  <eClassifiers xsi:type="ecore:EClass" name="WhileOrDoUntilStatement" eSuperTypes="#//LoopStatement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="logicalValueExpression"
        lowerBound="1" eType="#//ValueExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="doUntil" eType="#//Boolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
</ecore:EPackage>

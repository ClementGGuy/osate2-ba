--  Behavior Annex 2.11-18082009
--  Annex X.7 Behavior Expression Language
--  Example 5

--  $Id: ba_example_005.aadl 171 2010-02-16 13:15:39Z gardoll $

-- This example gives a basic implementation of a stack data type associated 
-- with its access methods. The various corresponding AADL component 
-- specifications are encompassed within a same package to offer an Object-
-- Oriented Class style.

package stack
public

  data stack
    features
      put : subprogram push;
      get : subprogram pop;
  end stack;

  data implementation stack.default
    subcomponents
      elems : data Basic_Types::Integer [100];
      sp : data Basic_Types::Integer;
  end stack.default;

  subprogram push
    features
      v : in parameter Basic_Types::Integer;
      this : requires data access stack.default;
      overflow : out event port;
  end push;

  subprogram pop
    features
      v : out parameter Basic_Types::Integer;
      this : requires data access stack.default;
      underflow : out event port;
  end pop;

private

  subprogram implementation push.default
  annex behavior_specification {**
    states
      s0 : initial final state;
    transitions
      s0 -[ sp <= 100 ]-> s0 { this.elems[this.sp]:=v; this.sp:=this.sp+1 };
      s0 -[ sp > 100 ]-> s0 { overflow! };
  **};
  end push.default;

  subprogram implementation pop.default
  annex behavior_specification {**
    states
      s0 : initial final state;
    transitions
      s0 -[ sp > 0 ]-> s0 { this.sp := this.sp-1; v:=this.elems[this.sp] };
      s0 -[ sp = 0 ]-> s0 { underflow! };
  **};
  end pop.default;

end stack;
